# /bin/bash

# Docker Content Trust（DCT）を有効にする。DCTは、Dockerイメージを「なりすまし」と「改ざん」から保護するセキュリティ機能です。
export DOCKER_CONTENT_TRUST=1

# show ls after cd
# https://qiita.com/2357gi/items/0ab1297357dedb90bbb1
chpwd() {
	if [[ ${pwd} != $HOME ]]; then
		ls
	fi
}

# Add 2 lines between this and ptevious line
precmd() { 
     print "\n\n" 
}

# SketchyBar: brew status
# https://github.com/FelixKratz/SketchyBar
# https://github.com/FelixKratz/dotfiles/blob/master/.config/yabai/yabairc
# function brew() {
#   command brew "$@" 

#   if [[ $* =~ "upgrade" ]] || [[ $* =~ "update" ]] || [[ $* =~ "outdated" ]]; then
#     sketchybar --trigger brew_update
#   fi
# }

# jump
eval "$(jump shell zsh)"


# pomodoro
# a pop up notification and sound alert (using the built-in sounds for macOS)
# Requires https://github.com/caarlos0/timer to be installed
# Mac setup for pomo

FILE_NAME=.pomodoro_history
MINS_WORK=50
MINS_REST=10
is_pomo_history() {
	if [ ! -f $HOME/$FILE_NAME ]; then
			touch $HOME/$FILE_NAME
			echo "created a history file (${HOME}/${FILE_NAME})"
	fi       
}

pomo_work() {
	is_pomo_history

	timer ${MINS_WORK}m && \
	terminal-notifier -message 'Pomodoro'\
			-title 'Work Timer is up! Take a Break 😊'\
			-appIcon '~/Downloads/IMG_5210.JPG'\
			-sound Funk && \
	echo "$(DATE '+%Y-%m-%d %H:%M:%S')  [WORK] : ${MINS_WORK} mins" >> $HOME/$FILE_NAME        
}

pomo_rest() {
	is_pomo_history      		     
	
	timer ${MINS_REST}m && \
	terminal-notifier -message 'Pomodoro'\
			-title 'Break is over! Get back to work 😬'\
			-appIcon '~/Pictures/pumpkin.png'\
			-sound Funk && \
	echo "$(DATE '+%Y-%m-%d %H:%M:%S')  [REST] : ${MINS_REST} mins" >> $HOME/$FILE_NAME        
}

todays_sessions() {
	TODAYS_POMO=$(cat ${HOME}/.pomodoro_history | grep "$(date '+%Y-%m-%d')")
	TODAYS_WORK=$(echo $TODAYS_POMO | grep "WORK")
	TODAYS_REST=$(echo $TODAYS_POMO | grep "REST")
	# wc -l is counting lines.
	# tr -d is replace and delete characters(arg1)
	TODAYS_WORK_SESSIONS=$(echo $TODAYS_WORK | wc -l | tr -d ' ')
	TODAYS_REST_SESSIONS=$(echo $TODAYS_REST | wc -l | tr -d ' ')
	SUM_WORK_MINS=$(($MINS_WORK*$TODAYS_WORK_SESSIONS))
	SUM_WORK_HOURS=0
	if [ SUM_WORK_MINS > 60 ]; then
		SUM_WORK_HOURS=$(($SUM_WORK_MINS/60))
		SUM_WORK_MINS=$(($SUM_WORK_MINS%60))
	fi
	echo -e "====================================="
	echo "Today's pomodoro sessions"
	echo -e "=====================================\n"
	echo "${TODAYS_WORK_SESSIONS} sessions (${SUM_WORK_HOURS} hours ${SUM_WORK_MINS} mins) \n"
	echo -e "-------------------------------------\n"
	echo $TODAYS_POMO	
}

# # date of the last monday
#  echo $(date -v-mon +"%F")
# # date of the last tueseday
#  echo $(date -v-mon +"%F")


################################################
# NEOFETCH
################################################
neofetch



